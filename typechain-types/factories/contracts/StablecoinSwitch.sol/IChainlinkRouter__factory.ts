/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IChainlinkRouter,
  IChainlinkRouterInterface,
} from "../../../contracts/StablecoinSwitch.sol/IChainlinkRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "receiver",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "address[]",
            name: "tokenAmounts",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "feeToken",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "extraArgs",
            type: "bytes",
          },
        ],
        internalType: "struct IChainlinkRouter.EVM2AnyMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipSend",
    outputs: [
      {
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
] as const;

export class IChainlinkRouter__factory {
  static readonly abi = _abi;
  static createInterface(): IChainlinkRouterInterface {
    return new Interface(_abi) as IChainlinkRouterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IChainlinkRouter {
    return new Contract(address, _abi, runner) as unknown as IChainlinkRouter;
  }
}
